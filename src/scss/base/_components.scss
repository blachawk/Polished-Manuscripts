//COMPONENTS TO EXTEND CSS

//FLEX COMPONENTS

.flex {
    display: flex;
}

.jc-center {
    justify-content: center;
}

.ai-center {
    align-items: center;
    //effects horizontal alignment because the parent's flex-direction is set to column.  if flex direction was row, than this value would impact the opposite!!!
    //https://stackoverflow.com/questions/35049262/difference-between-justify-content-vs-align-items
}

//BASE FONT FAMILY | VARS

$base-font-family: 'Playfair Display', serif;

//COLORS | VARS

$white: white;
$floralwhite: floralwhite;
$palrod: palegoldenrod;
$khaki: khaki;
$darksalmon: darksalmon;
$coco: chocolate;
$brown: brown;
$red: #DA2A1B;
$gold:goldenrod;
$olive: darkolivegreen;
$grey: grey;
$grey-light:#ccc;
$thistle:thistle;
$grey-dark: #333;

//GENERICS 

.visible {
    visibility: visible;
}

.hidden {
    visibility: hidden;
}

.d-none {
    display: none !important;
}

.op-05 {
    opacity: 0.5;
}

.tint {
    filter: brightness(85%);
}

.trans {
    transition: 0.3s;
}

.lh-125 {
    line-height: 1.25;
}

//LISTS

ul,
ol {
    li {
        position: relative;
        padding: 0.5rem;
        list-style: none;
    }

    //PRETTY DISC OPTION
    &.discs {
        list-style: none;

        li:before {
            content: "";
            display: inline-block;
            position: relative;
            margin: 0 5px 0 0;
            width: 4px;
            height: 4px;
            border-radius: 11px;
            border: 4px solid $red;
            background-color: $red;
            opacity: 0.9;
        }
    }

    //PRETTY CIRCLE OPTION
    &.circles {
        list-style: none;

        li:before {
            content: "";

            display: inline-block;
            position: relative;
            top: 2px;
            margin: 0 5px 0 0;
            width: 8px;
            height: 8px;
            border-radius: 11px;
            border: 4px solid $red;
            background-color: transparent;
            opacity: 0.9;
        }
    }
}

//BUTTONS

.action_btn {
    display: block;
    margin: 0 auto;
    border-radius: 1rem;
    text-decoration: none;
    text-align: center;
    color: $grey-dark;
    background-color: $grey-light;
    border: solid 0.25rem $grey-dark;
}

//MULTI-SELECT 

select {
    &.select-options {
        width: 140px;
        height: 35px;
        padding: 4px;
        border-radius: 4px;
        box-shadow: 2px 2px 8px $grey;
        //background: $palrod;
        border: none;
        outline: none;
        display: inline-block;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        cursor: pointer;

        option {
             &.base {
                background-color:$white;
                color:$red; 
            }
            &.cream {
                background-color:$palrod;
                color:$grey-dark; 
            }
            &.darknight {
                background-color:$grey-dark;
                color:$white;
            }
        }
    }

    label {
        position: relative;
    }

    label:after {
        content: '<>';
        font: 11px "Consolas", monospace;
        color: $grey;
        -webkit-transform: rotate(90deg);
        -moz-transform: rotate(90deg);
        transform: rotate(90deg);
        right: 8px;
        top: 2px;
        padding: 0 0 2px;
        border-bottom: 1px solid $palrod;
        position: absolute;
        pointer-events: none;
    }

    label:before {
        content: '';
        right: 6px;
        top: 0px;
        width: 20px;
        height: 20px;
        background-color:$grey-light;
        position: absolute;
        pointer-events: none;
        display: block;
    }
}

//HORIZONTAL RULES 

hr {
    &.sm {
        display: inline-block;
        margin: 0 0 15px 0;
        width: 40px;
        height: 2px;
        border: 0;
        background-color: $grey-light;
    }

    &.fw {
        display: block;
        margin: 1em 2em;
        width: 100%;
        height: 1px;
        border: 0;
        background-color: $palrod;
    }
}

//BLOCK QUOTES

blockquote {
    margin: 1.5em 0.625rem;
    padding: 0.5em 0.625rem;

    p {
        display: inline;
    }
}

//HEADING ELEMENTS | MAPS
//https://sass-lang.com/documentation/values/maps

$headings: (
    h6: 1.25rem,
    h5: 1.50rem,
    h4: 2rem,
    h3: 3rem,
    h2: 4rem,
    h1: 5rem);

@each $name,
$val in $headings {
    #{$name} {
        font-size: $val;
    }
}

//SHADOWS | MIXIN
//https://stackoverflow.com/questions/3525007/making-a-sass-mixin-with-optional-arguments
//https://www.w3schools.com/CSSref/css3_pr_box-shadow.asp
@mixin shadow($hoffset:0, $voffset:0, $blur:10px, $spread:0, $color:rgba(0, 0, 0, 0.75), $option:null) {
    -webkit-box-shadow: $option $hoffset $voffset $blur $spread $color;
    -moz-box-shadow: $option $hoffset $voffset $blur $spread $color;
    box-shadow: $option $hoffset $voffset $blur $spread $color;
}

.shadow-inset {
    @include shadow();
}

.shadow-fall {
    @include shadow(0, 117px, 60px, -119px, rgba(0, 0, 0, 1), inset);
}

.shadow-box {
    @include shadow(0, 15px, 25px, 0, rgba(51, 51, 51, .15));
}

.shadow-box-dark {
    @include shadow(0, 5px, 25px, 0, rgba(51, 51, 51, .35));
}

//FONT WEIGHTS | MAPS
//https://sass-lang.com/documentation/values/maps
//https://www.digitalocean.com/community/tutorials/sass-each-loops

$fontweights: (fweight-bold: bold,
    fweight-400: 400,
    fweight-500: 500,
    fweight-800: 800);

@each $name,
$val in $fontweights {
    .#{$name} {
        font-weight: $val;
    }
}

//FONT SIZES | MAPS
//https://sass-lang.com/documentation/values/maps

$fontsizes: (
    fsize-08: 0.8rem,
    fsize-1: 1rem,
    fsize-125: 1.25rem,
    fsize-13: 1.3rem,
    fsize-15: 1.5rem,
    fsize-175: 1.75rem,
    fsize-2: 2rem);

@each $name,
$val in $fontsizes {
    .#{$name} {
        font-size: $val;
    }
}

//FONT FAMILIES | MAPS 
//https://sass-lang.com/documentation/values/maps
//not in use at the moment...but with more layout options, this map will grow

$fontfams: (ffam-arial: arial);

@each $name,
$val in $fontfams {
    .#{$name} {
        font-family: $val;
        font-weight: initial;
    }
}

//FONT STYLE
.fstyle-italic {
    font-style: italic;
}

//FONT COLORS | MAPS 
//https://sass-lang.com/documentation/values/maps

$fontcolors: (
    txt-white: $white,
    txt-floralwhite: $floralwhite,
    txt-palrod: $palrod,
    txt-khaki: $khaki,
    txt-coco: $coco,
    txt-brown: $brown,
    txt-red: $red,
    txt-gold: $gold,
    txt-olive: $olive,
    txt-grey: $grey,
    txt-grey-dark:$grey-dark,
    txt-thristle:$thistle,
    );

@each $name,
$val in $fontcolors {
    .#{$name} {
        color: $val;
    }
}

.txt-dec-white {
    text-decoration-color: $white;
}

//BACKGROUND COLORS | MAPS 
//https://sass-lang.com/documentation/values/maps

$bgcolors: (

    bg-white: $white,
    bg-floralwhite: $floralwhite,
    bg-palrod: $palrod,
    bg-khaki: $khaki,
    bg-coco: $coco,
    bg-brown: $brown,
    bg-red: $red,
    bg-gold: $gold,
    bg-olive: $olive,
    bg-grey: $grey,
    bg-grey-dark:$grey-dark,
    bg-darksalmon: $darksalmon
    );

@each $name,
$val in $bgcolors {
    .#{$name} {
        background-color: $val;
    }
}

//BORDERS CUSTOM

$borders: (
    (border, border, solid 0.0625rem $olive),
    (border-btm, border-bottom, solid 0.0625rem $olive),
    (border-left-grey-light, border-left, 0.625rem solid $grey-light),
    (border-white, border, solid 1rem $white));

@each $selector,
$prop,
$value in $borders {
    .#{$selector} {
        #{$prop}: $value;
    }
}

//BORDER COLORS | MAPS 
//https://sass-lang.com/documentation/values/maps

$bordercolors: (border-red: $red,
    border-grey: $grey);

@each $name,
$val in $bordercolors {
    .#{$name} {
        border-color: $val;
    }
}

//HOVERS & ACTIVES

.hover-red {
    &:hover {
        background-color: $red;
        text-decoration-color: $red;
    }
}

.hover-dark {
    &:hover {
        color: $white;
        background-color: $red;
    }
}

.hover-txt-red {
    &:hover {
        color: $red;
    }
}

.hover-child-goldenrod {
    &:hover {
        span {
            border-color: $gold;
        }
    }
}

.active-border-white {
    &:active {
        border-color: $white;
    }
}

.active-red {
    &:active {
        color: $red;
    }
}

.active-txt-red {
    &:active {
        color: $red;
    }
}

//PADDING & MARGIN HELPERS | MAPS 
//https://sass-lang.com/documentation/values/maps
//http://sass.js.org/
//https://www.sitepoint.com/sass-maps-vs-nested-lists/
//https://www.w3schools.com/Css/css_syntax.asp

$margspads: ((m-sm, margin, 1rem),
    (m-md, margin, 2rem),
    (m-lg, margin, 5rem),
    (m-x-sm, margin, 0 1rem),
    (m-x-md, margin, 0 2rem),
    (m-x-lg, margin, 0 5rem),
    (m-y-sm, margin, 1rem 0),
    (m-y-md, margin, 2rem 0),
    (m-y-lg, margin, 5rem 0),
    (m-btm-sm, margin-bottom, 1rem),
    (m-btm-md, margin-bottom, 2rem),
    (m-btm-lg, margin-bottom, 5rem),
    (p-sm, padding, 1rem),
    (p-md, padding, 2rem),
    (p-lg, padding, 5rem),
    (p-x-sm, padding, 0 1rem),
    (p-x-md, padding, 0 2rem),
    (p-x-lg, padding, 0 5rem),
    (p-y-sm, padding, 1rem 0),
    (p-y-md, padding, 2rem 0),
    (p-y-lg, padding, 5rem 0),
    (p-btm-sm, padding-bottom, 1rem),
    (p-btm-md, padding-bottom, 2rem),
    (p-btm-lg, padding-bottom, 5rem),
    (p-top-sm, padding-top, 1rem),
    (p-top-md, padding-top, 2rem),
    (p-top-lg, padding-top, 5rem),
    (p-lft-sm, padding-left, 1em));

@each $selector,
$prop,
$value in $margspads {
    .#{$selector} {
        #{$prop}: $value;
    }
}

//MAX & MIN WIDTHS | MAPS 
//https://sass-lang.com/documentation/values/maps
//http://sass.js.org/
//https://www.sitepoint.com/sass-maps-vs-nested-lists/
//https://www.w3schools.com/Css/css_syntax.asp
$wmaxmin: ((wmax-50, max-width, 50px),
    (wmax-200, max-width, 200px),
    (wmax-300, max-width, 300px),
    (wmax-800, max-width, 800px),
    (wmax-900, max-width, 900px),
    (wmin-200, min-width, 200px),
    (wmin-300, min-width, 300px),

);

@each $selector,
$prop,
$value in $wmaxmin {
    .#{$selector} {
        #{$prop}: $value;
    }
}